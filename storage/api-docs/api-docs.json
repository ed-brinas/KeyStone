{
    "openapi": "3.0.0",
    "info": {
        "title": "KeyStone AD Management API",
        "description": "API for managing on-premise Active Directory (Multi-Domain)",
        "contact": {
            "name": "Keystone Admin",
            "email": "admin@keystone.app"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local API Server"
        }
    ],
    "paths": {
        "/api/v1/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate user and return Sanctum token",
                "operationId": "da2ca4d7a5cdec77b8b45a20373535cb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "username",
                                    "password",
                                    "domain"
                                ],
                                "properties": {
                                    "username": {
                                        "type": "string",
                                        "example": "jdoe"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "P@ssw0rd123!!"
                                    },
                                    "domain": {
                                        "type": "string",
                                        "example": "ncc.lab"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "token": {
                                            "type": "string"
                                        },
                                        "user": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "roles": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "403": {
                        "description": "Access denied"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/api/v1/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout the current authenticated user",
                "operationId": "c4eddaf1a2e990cc90e4326c0d731d41",
                "responses": {
                    "204": {
                        "description": "Logout successful"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/health": {
            "get": {
                "tags": [
                    "Health Check"
                ],
                "summary": "Check API and AD connectivity",
                "description": "* @OA\\Get(\n* path=\"/api/v1/health\",\n* summary=\"Check API and AD connectivity\",\n* tags={\"Health Check\"},\n* @OA\\Response(response=200, description=\"API health information\"),\n* @OA\\Response(response=503, description=\"Service unavailable\")\n* )",
                "operationId": "4007bacb94db2cad9d5b2b73d79543eb",
                "responses": {
                    "200": {
                        "description": "API health information"
                    },
                    "503": {
                        "description": "Service unavailable"
                    }
                }
            }
        },
        "/api/v1/passwords/reset-standard": {
            "post": {
                "tags": [
                    "Password Management"
                ],
                "summary": "Reset a standard user password",
                "operationId": "9621547ad719b602f5d8df74fd390e88",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetStandardPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful"
                    },
                    "400": {
                        "description": "Invalid input or password policy violation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/passwords/reset-admin": {
            "post": {
                "tags": [
                    "Password Management"
                ],
                "summary": "Reset a user password as an administrator",
                "operationId": "56650a0abe7978b99091021fb51f3d3f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetAdminPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successful"
                    },
                    "400": {
                        "description": "Invalid input or password policy violation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/users": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "List AD users by domain",
                "operationId": "3ab81e3f9b24b4f36ab08d72349ac632",
                "parameters": [
                    {
                        "name": "domain",
                        "in": "query",
                        "description": "Domain name to filter users (e.g. ncc.lab)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ncc.lab"
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by display name contains",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "John"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Enabled status filter (accepts true/false or 1/0)",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": true
                        }
                    },
                    {
                        "name": "admin",
                        "in": "query",
                        "description": "Has admin account filter (accepts true/false or 1/0)",
                        "required": false,
                        "schema": {
                            "type": "boolean",
                            "example": false
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of users"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Users"
                ],
                "summary": "Create a new Active Directory user",
                "operationId": "ba548b97148bb5c0d8cab3bc3f128bfd",
                "requestBody": {
                    "description": "User creation data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "domain",
                                    "samAccountName",
                                    "firstName",
                                    "lastName"
                                ],
                                "properties": {
                                    "domain": {
                                        "type": "string",
                                        "example": "ncc.lab"
                                    },
                                    "samAccountName": {
                                        "type": "string",
                                        "example": "jdoe"
                                    },
                                    "firstName": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "lastName": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "dateOfBirth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-05-15"
                                    },
                                    "mobileNumber": {
                                        "type": "string",
                                        "example": "+966501234567"
                                    },
                                    "createAdminAccount": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "optionalGroupsForStandardUser": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "optionalGroupsForHighPrivilegeUsers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created successfully"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/users/{samaccountname}": {
            "get": {
                "tags": [
                    "Users"
                ],
                "summary": "Get a single user by samAccountName",
                "operationId": "54e9ac63cdf0ba43073e029cbad6b71c",
                "parameters": [
                    {
                        "name": "samaccountname",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "jdoe"
                        }
                    },
                    {
                        "name": "domain",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "ncc.lab"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Users"
                ],
                "summary": "Update user details",
                "operationId": "1f84f54633c4ba6ecbb1fdb4f46775a1",
                "parameters": [
                    {
                        "name": "samaccountname",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "User update data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "domain"
                                ],
                                "properties": {
                                    "domain": {
                                        "type": "string",
                                        "example": "ncc.lab"
                                    },
                                    "dateOfBirth": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "1990-05-15"
                                    },
                                    "mobileNumber": {
                                        "type": "string",
                                        "example": "+966501234567"
                                    },
                                    "optionalGroups": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "hasAdminAccount": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/users/{samaccountname}/enable": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Enable a user account",
                "operationId": "2afa0695f5e7acb2b672b52dfe265350",
                "parameters": [
                    {
                        "name": "samaccountname",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "domain"
                                ],
                                "properties": {
                                    "domain": {
                                        "type": "string",
                                        "example": "ncc.lab"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account enabled"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/users/{samaccountname}/disable": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Disable a user account",
                "operationId": "1450e9a4d1dde644dd15a6a9f3a37ea3",
                "parameters": [
                    {
                        "name": "samaccountname",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "domain"
                                ],
                                "properties": {
                                    "domain": {
                                        "type": "string",
                                        "example": "ncc.lab"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account disabled"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/users/{samaccountname}/unlock": {
            "patch": {
                "tags": [
                    "Users"
                ],
                "summary": "Unlock a user account",
                "operationId": "5be902c6485021d727b000b7084f5994",
                "parameters": [
                    {
                        "name": "samaccountname",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "domain"
                                ],
                                "properties": {
                                    "domain": {
                                        "type": "string",
                                        "example": "ncc.lab"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Account unlocked"
                    },
                    "403": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "User not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "ResetStandardPasswordRequest": {
                "required": [
                    "username",
                    "new_password"
                ],
                "properties": {
                    "username": {
                        "description": "The username whose password should be reset",
                        "type": "string",
                        "example": "jdoe"
                    },
                    "new_password": {
                        "description": "The new password to set for the user",
                        "type": "string",
                        "example": "NewSecureP@ssw0rd"
                    }
                },
                "type": "object"
            },
            "ResetAdminPasswordRequest": {
                "required": [
                    "admin_username",
                    "target_username",
                    "new_password"
                ],
                "properties": {
                    "admin_username": {
                        "description": "The admin performing the reset",
                        "type": "string",
                        "example": "admin.user"
                    },
                    "target_username": {
                        "description": "The username whose password is being reset",
                        "type": "string",
                        "example": "jdoe"
                    },
                    "new_password": {
                        "description": "The new password to assign to the user",
                        "type": "string",
                        "example": "StrongAdminP@ss!23"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "description": "Enter token in format: Bearer {token}",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "sanctum": []
        }
    ],
    "tags": [
        {
            "name": "Authentication",
            "description": "User authentication and logout endpoints."
        },
        {
            "name": "Health Check",
            "description": "API health and connectivity endpoints."
        },
        {
            "name": "Password Management",
            "description": "Password Management"
        },
        {
            "name": "Users",
            "description": "Users"
        }
    ]
}